.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "dos2unix 1"
.TH dos2unix 1 "2012-05-06" "dos2unix" "2014-01-21"
.SH "NOMBRE"
.IX Header "NOMBRE"
dos2unix \- Convertidor de archivos de texto de formato DOS/Mac a Unix y viceversa
.SH "SINOPSIS"
.IX Header "SINOPSIS"
.Vb 2
\&    dos2unix [parámetros] [ARCHIVO ...] [-n ARCH_DE_ENTRADA ARCH_DE_SALIDA ...]
\&    unix2dos [parámetros] [ARCHIVO ...] [-n ARCH_DE_ENTRADA ARCH_DE_SALIDA ...]
.Ve
.SH "DESCRIPCIÓN"
.IX Header "DESCRIPCIÓN"
El paquete Dos2unix incluye las utilerías \f(CW\*(C`dos2unix\*(C'\fR y \f(CW\*(C`unix2dos\*(C'\fR para
convertir archivos de texto plano en formato \s-1DOS\s0 o Mac a formato Unix y viceversa.
.PP
En archivos de texto DOS/Windows, un salto de línea, también conocido como nueva
línea, es una combinación de dos caracteres: un retorno de carro (\s-1CR\s0) seguido
por un salto de línea (\s-1LF\s0). En archivos de texto Unix, un salto de línea es
solamente un carácter: el salto de línea (\s-1LF\s0). En archivos de texto Mac, antes
de Mac \s-1OS\s0 X, un salto de línea era sólo un carácter retorno de carro (\s-1CR\s0).
Actualmente, Mac \s-1OS\s0 usa el estilo Unix de saltos de línea (\s-1LF\s0).
.PP
Los archivos binarios son ignorados automáticamente, a menos que se fuerce su
conversión.
.PP
Los archivos no regulares, tales como directorios y \s-1FIFO\s0, son ignorados
automáticamente.
.PP
Los enlaces simbólicos y sus destinos no son modificados por defecto.
Los enlaces simbólicos pueden opcionalmente ser reemplazados, o la salida puede
ser escrita al archivo destino del enlace.
Los enlaces simbólicos en Windows no están soportados. Estos son siempre
reemplazados, sin que se alteren sus destinos.
.PP
Dos2unix fue moldeado a partir del dos2unix que existe en SunOS/Solaris y tiene
modos de conversión similares.
.SH "PARÁMETROS"
.IX Header "PARÁMETROS"
.IP "\fB\-\-\fR" 4
.IX Item "--"
Todos los parámetros siguientes son tratados como nombres de archivo. Use este
parámetro si desea convertir archivos cuyos nombres inician con un guión. Por
ejemplo para convertir un archivo llamado \*(L"\-foo\*(R", use este comando:
.Sp
.Vb 1
\&    dos2unix -- -foo
.Ve
.Sp
O en modo de archivo nuevo:
.Sp
.Vb 1
\&    dos2unix -n -- -foo out.txt
.Ve
.IP "\fB\-ascii\fR" 4
.IX Item "-ascii"
Sólo convierte los salto de línea. Éste es el modo de conversión por defecto.
.IP "\fB\-iso\fR" 4
.IX Item "-iso"
Conversión entre el conjunto de caracteres \s-1DOS\s0 e \s-1ISO\-8859\-1\s0. Véase también la
sección \s-1MODOS\s0 \s-1DE\s0 CONVERSIÓN.
.IP "\fB\-1252\fR" 4
.IX Item "-1252"
Usa la página de códigos Windows 1252 (Europa Occidental).
.IP "\fB\-437\fR" 4
.IX Item "-437"
Usa la página de códigos \s-1DOS\s0 437 (\s-1EE\s0. \s-1UU\s0.). Está es la página de códigos usada
por defecto para conversión \s-1ISO\s0.
.IP "\fB\-850\fR" 4
.IX Item "-850"
Usa la página de códigos \s-1DOS\s0 850 (Europa Occidental).
.IP "\fB\-860\fR" 4
.IX Item "-860"
Usa la página de códigos \s-1DOS\s0 860 (Portugués).
.IP "\fB\-863\fR" 4
.IX Item "-863"
Usa la página de códigos \s-1DOS\s0 863 (Francocanadiense).
.IP "\fB\-865\fR" 4
.IX Item "-865"
Usa la página de códigos \s-1DOS\s0 865 (Nórdico).
.IP "\fB\-7\fR" 4
.IX Item "-7"
Convierte caracteres de 8 bits al espacio de 7 bits.
.IP "\fB\-c, \-\-convmode \s-1CONVMODE\s0\fR" 4
.IX Item "-c, --convmode CONVMODE"
Establece el modo de conversión, Donde \s-1CONVMODE\s0 puede ser:
\&\fIascii\fR, \fI7bit\fR, \fIiso\fR, \fImac\fR
siendo ascii el valor por defecto.
.IP "\fB\-f, \-\-force\fR" 4
.IX Item "-f, --force"
Fuerza la conversión de archivos binarios.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Despiega la ayuda y termina el programa.
.IP "\fB\-k, \-\-keepdate\fR" 4
.IX Item "-k, --keepdate"
Mantiene la fecha del archivo de salida igual a la del archivo de entrada.
.IP "\fB\-L, \-\-license\fR" 4
.IX Item "-L, --license"
Muestra la licencia del programa.
.IP "\fB\-l, \-\-newline\fR" 4
.IX Item "-l, --newline"
Añade salto de línea adicional.
.Sp
\&\fBdos2unix\fR: Sólo los saltos de línea \s-1DOS\s0 son cambiados por dos saltos de línea
Unix.
En modo Mac sólo los saltos de línea Mac son cambiados por dos saltos de línea
Unix.
.Sp
\&\fBunix2dos\fR: Sólo los saltos de línea Unix son cambiados por dos saltos de línea
\&\s-1DOS\s0.
En modo Mac los saltos de línea Unix son cambiados por dos saltos de línea Mac.
.IP "\fB\-m, \-\-add\-bom\fR" 4
.IX Item "-m, --add-bom"
Write an \s-1UTF\-8\s0 Byte Order Mark in the output file. Never use this option when
the output encoding is other than \s-1UTF\-8\s0. See also section \s-1UNICODE\s0.
.IP "\fB\-n, \-\-newfile \s-1ARCH_DE_ENTRADA\s0 \s-1ARCH_DE_SALIDA\s0 ...\fR" 4
.IX Item "-n, --newfile ARCH_DE_ENTRADA ARCH_DE_SALIDA ..."
Modo de archivo nuevo. Convierte el archivo \s-1ARCH_DE_ENTRADA\s0 y escribe la salida
al archivo \s-1ARCH_DE_SALIDA\s0.
Los nombres de archivo deben ser dados en pares y los comodines \fIno\fR deben ser
usados o \fIperderá\fR sus archivos.
.IP "\fB\-o, \-\-oldfile \s-1ARCHIVO\s0 ...\fR" 4
.IX Item "-o, --oldfile ARCHIVO ..."
Modo de archivo viejo. Convierte el archivo \s-1ARCHIVO\s0 y lo sobrescribe con la salida.
El programa por defecto se ejecuta en este modo. Sí se pueden emplear comodines.
.IP "\fB\-q, \-\-quiet\fR" 4
.IX Item "-q, --quiet"
Modo silencioso. Suprime todas las advertencias y mensajes. El valor retornado
es cero. Excepto cuando se emplean parámetros incorrectos.
.IP "\fB\-s, \-\-safe\fR" 4
.IX Item "-s, --safe"
Ignora los archivos binarios (por defecto).
.IP "\fB\-F, \-\-follow\-symlink\fR" 4
.IX Item "-F, --follow-symlink"
Sigue los enlaces simbólicos y convierte los destinos.
.IP "\fB\-R, \-\-replace\-symlink\fR" 4
.IX Item "-R, --replace-symlink"
Reemplaza los enlaces simbólicos con los archivos convertidos
(los archivos destino originales no se alteran).
.IP "\fB\-S, \-\-skip\-symlink\fR" 4
.IX Item "-S, --skip-symlink"
No altera los enlaces simbólicos ni sus destinos (por defecto).
.IP "\fB\-V, \-\-version\fR" 4
.IX Item "-V, --version"
Despiega la información de la versión y termina el programa.
.SH "MODO MAC"
.IX Header "MODO MAC"
En modo normal los saltos de línea son convertidos de \s-1DOS\s0 a Unix y viceversa.
Los saltos de línea Mac no son convertidos.
.PP
En modo Mac los saltos de línea son convertidos de Mac a Unix y viceversa. Los
saltos de línea \s-1DOS\s0 no son modificados.
.PP
Para ejecutar en modo Mac use el modificador \f(CW\*(C`\-c mac\*(C'\fR o use los comandos
\&\f(CW\*(C`mac2unix\*(C'\fR o \f(CW\*(C`unix2mac\*(C'\fR.
.SH "MODOS DE CONVERSIÓN"
.IX Header "MODOS DE CONVERSIÓN"
Los modos de conversión \fIascii\fR, \fI7bit\fR, e \fIiso\fR son similares a los de
los comandos dos2unix/unix2dos de SunOS/Solaris.
.IP "\fBascii\fR" 4
.IX Item "ascii"
En modo \f(CW\*(C`ascii\*(C'\fR sólo los saltos de línea son convertidos. Éste es el modo de
conversión por defecto.
.Sp
Aunque el nombre de este modo es \s-1ASCII\s0, el cual es un estándar de 7 bits, éste
emplea 8 bits. Siempre use este modo cuando convierta archivos en Unicode \s-1UTF\-8\s0.
.IP "\fB7bit\fR" 4
.IX Item "7bit"
En este modo todos los caracteres no \s-1ASCII\s0 de 8 bits (con valores de 128 a 255)
son convertidos al espacio de 7 bits.
.IP "\fBiso\fR" 4
.IX Item "iso"
Los caracteres son convertidos entre un conjunto de caracteres \s-1DOS\s0 (página de
códigos) y el conjunto de caracteres \s-1ISO\-8859\-1\s0 (Latín\-1) de Unix. Los
caracteres \s-1DOS\s0 sin equivalente \s-1ISO\-8859\-1\s0, para los cuales la conversión es
imposible, son convertidos en un punto. Lo mismo se aplica para caracteres
\&\s-1ISO\-8859\-1\s0 sin contraparte \s-1DOS\s0.
.Sp
Cuando sólo se emplea el parámetro \f(CW\*(C`\-iso\*(C'\fR, dos2unix intentará determinar la
página de códigos activa. Cuando esto no sea posible, dos2unix utilizará la
página de códigos 437 por defecto, la cual es empleada principalmente en \s-1EE\s0. \s-1UU\s0.
Para forzar una página de códigos específica emplee los parámetros
\&\f(CW\*(C`\-437\*(C'\fR (\s-1EE\s0. \s-1UU\s0.), \f(CW\*(C`\-850\*(C'\fR (Europa Occidental), \f(CW\*(C`\-860\*(C'\fR (Portugués),
\&\f(CW\*(C`\-863\*(C'\fR (Francocanadiense), o \f(CW\*(C`\-865\*(C'\fR (Nórdico). La página de códigos Windows
1252 (Europa Occidental) también está soportada con el parámetro \f(CW\*(C`\-1252\*(C'\fR. Para
acceder a otras páginas de códigos use dos2unix en combinación con \fIiconv\fR\|(1).
Iconv puede convertir entre una larga lista de codificaciones de caracteres.
.Sp
Never use \s-1ISO\s0 converion on Unicode text files. It will corrupt \s-1UTF\-8\s0 encoded files.
.Sp
Algunos ejemplos:
.Sp
Convierte de la página de códigos por defecto de \s-1DOS\s0 a Latín\-1 de Unix.
.Sp
.Vb 1
\&    dos2unix -iso -n in.txt out.txt
.Ve
.Sp
Convierte de \s-1DOS\s0 850 a Unix Latín\-1.
.Sp
.Vb 1
\&    dos2unix -850 -n in.txt out.txt
.Ve
.Sp
Convierte de Windows 1252 a Unix Latín\-1.
.Sp
.Vb 1
\&    dos2unix -1252 -n in.txt out.txt
.Ve
.Sp
Convierte de Windows 1252 a Unix \s-1UTF\-8\s0 (Unicode).
.Sp
.Vb 1
\&    iconv -f CP1252 -t UTF-8 in.txt | dos2unix > out.txt
.Ve
.Sp
Convierte de Unix Latín\-1 a la página de códigos por defecto de \s-1DOS\s0.
.Sp
.Vb 1
\&    unix2dos -iso -n in.txt out.txt
.Ve
.Sp
Convierte de Unix Latín\-1 a \s-1DOS\s0 850.
.Sp
.Vb 1
\&    unix2dos -850 -n in.txt out.txt
.Ve
.Sp
Convierte de Unix Latín\-1 a Windows 1252.
.Sp
.Vb 1
\&    unix2dos -1252 -n in.txt out.txt
.Ve
.Sp
Convierte de Unix \s-1UTF\-8\s0 (Unicode) a Windows 1252.
.Sp
.Vb 1
\&    unix2dos < in.txt | iconv -f UTF-8 -t CP1252 > out.txt
.Ve
.Sp
Véase también <http://czyborra.com/charsets/codepages.html>
y <http://czyborra.com/charsets/iso8859.html>.
.SH "UNICODE"
.IX Header "UNICODE"
.Sh "Encodings"
.IX Subsection "Encodings"
There exist different Unicode encodings. On Unix and Linux Unicode files are
typically encoded in \s-1UTF\-8\s0 encoding. On Windows Unicode text files can be
encoded in \s-1UTF\-8\s0, \s-1UTF\-16\s0, or \s-1UTF\-16\s0 big endian, but are mostly encoded in
\&\s-1UTF\-16\s0 format.
.Sh "Conversion"
.IX Subsection "Conversion"
Unicode text files can have \s-1DOS\s0, Unix or Mac line breaks, like regular text
files.
.PP
All versions of dos2unix and unix2dos can convert \s-1UTF\-8\s0 encoded files, because
\&\s-1UTF\-8\s0 was designed for backward compatiblity with \s-1ASCII\s0.
.PP
Dos2unix and unix2dos with Unicode \s-1UTF\-16\s0 support, can read little and big
endian \s-1UTF\-16\s0 encoded text files. To see if dos2unix was built with \s-1UTF\-16\s0
support type \f(CW\*(C`dos2unix \-V\*(C'\fR.
.PP
The Windows versions of dos2unix and unix2dos convert \s-1UTF\-16\s0 encoded files
always to \s-1UTF\-8\s0 encoded files. Unix versions of dos2unix/unix2dos convert
\&\s-1UTF\-16\s0 encoded files to the locale character encoding when it is set to \s-1UTF\-8\s0.
Use the \fIlocale\fR\|(1) command to find out what the locale character encoding is.
.PP
Because \s-1UTF\-8\s0 formatted text files are well supported on both Windows and Unix,
dos2unix and unix2dos have no option to write \s-1UTF\-16\s0 files. All \s-1UTF\-16\s0
characters can be encoded in \s-1UTF\-8\s0. Conversion from \s-1UTF\-16\s0 to \s-1UTF\-8\s0 is without
loss. \s-1UTF\-16\s0 files will be skipped on Unix when the locale character encoding
is not \s-1UTF\-8\s0, to prevent accidental loss of text. When an \s-1UTF\-16\s0 to \s-1UTF\-8\s0
conversion error occurs, for instance when the \s-1UTF\-16\s0 input file contains
an error, the file will be skipped.
.PP
\&\s-1ISO\s0 and 7\-bit mode conversion do not work on \s-1UTF\-16\s0 files.
.Sh "Byte Order Mark"
.IX Subsection "Byte Order Mark"
On Windows Unicode text files typically have a Byte Order Mark (\s-1BOM\s0), because
many Windows programs (including Notepad) add BOMs by default. See also
<http://en.wikipedia.org/wiki/Byte_order_mark>.
.PP
On Unix Unicode files typically don't have a \s-1BOM\s0. It is assumed that text files
are encoded in the locale character encoding.
.PP
Dos2unix can only detect if a file is in \s-1UTF\-16\s0 format if the file has a \s-1BOM\s0.
When an \s-1UTF\-16\s0 file doesn't have a \s-1BOM\s0, dos2unix will see the file as a binary
file.
.PP
Use dos2unix in combination with \fIiconv\fR\|(1) to convert an \s-1UTF\-16\s0 file without
\&\s-1BOM\s0.
.PP
Dos2unix never writes a \s-1BOM\s0 in the output file, unless you use option \f(CW\*(C`\-m\*(C'\fR.
.PP
Unix2dos writes a \s-1BOM\s0 in the output file when the input file has a \s-1BOM\s0, or
when option \f(CW\*(C`\-m\*(C'\fR is used.
.Sh "Unicode examples"
.IX Subsection "Unicode examples"
Convert from Windows \s-1UTF\-16\s0 (with \s-1BOM\s0) to Unix \s-1UTF\-8\s0
.PP
.Vb 1
\&    dos2unix -n in.txt out.txt
.Ve
.PP
Convert from Windows \s-1UTF\-16\s0 (without \s-1BOM\s0) to Unix \s-1UTF\-8\s0
.PP
.Vb 1
\&    iconv -f UTF-16 -t UTF-8 in.txt | dos2unix > out.txt
.Ve
.PP
Convert from Unix \s-1UTF\-8\s0 to Windows \s-1UTF\-8\s0 with \s-1BOM\s0
.PP
.Vb 1
\&    unix2dos -m -n in.txt out.txt
.Ve
.PP
Convert from Unix \s-1UTF\-8\s0 to Windows \s-1UTF\-16\s0
.PP
.Vb 1
\&    unix2dos < in.txt | iconv -f UTF-8 -t UTF-16 > out.txt
.Ve
.SH "EJEMPLOS"
.IX Header "EJEMPLOS"
Lee la entrada desde 'stdin' y escribe la salida a 'stdout'.
.PP
.Vb 2
\&    dos2unix
\&    dos2unix -l -c mac
.Ve
.PP
Convierte y reemplaza a.txt. Convierte y reemplaza b.txt.
.PP
.Vb 2
\&    dos2unix a.txt b.txt
\&    dos2unix -o a.txt b.txt
.Ve
.PP
Convierte y reemplaza a.txt empleando modo de conversión ascii.
.PP
.Vb 1
\&    dos2unix a.txt
.Ve
.PP
Convierte y reemplaza a.txt empleando modo de conversión ascii.
Convierte y reemplaza b.txt empleando modo de conversión de 7bits.
.PP
.Vb 3
\&    dos2unix a.txt -c 7bit b.txt
\&    dos2unix -c ascii a.txt -c 7bit b.txt
\&    dos2unix -ascii a.txt -7 b.txt
.Ve
.PP
Convierte a.txt del formato de Mac a Unix.
.PP
.Vb 2
\&    dos2unix -c mac a.txt
\&    mac2unix a.txt
.Ve
.PP
Convierte a.txt del formato de Unix a Mac.
.PP
.Vb 2
\&    unix2dos -c mac a.txt
\&    unix2mac a.txt
.Ve
.PP
Convierte y reemplaza a.txt manteniendo la fecha del archivo original.
.PP
.Vb 2
\&    dos2unix -k a.txt
\&    dos2unix -k -o a.txt
.Ve
.PP
Convierte a.txt y escribe la salida a e.txt.
.PP
.Vb 1
\&    dos2unix -n a.txt e.txt
.Ve
.PP
Convierte a.txt y escribe la salida a e.txt, manteniendo la fecha de e.txt
igual a la de a.txt.
.PP
.Vb 1
\&    dos2unix -k -n a.txt e.txt
.Ve
.PP
Convierte y reemplaza a.txt. Convierte b.txt y escribe a e.txt.
.PP
.Vb 2
\&    dos2unix a.txt -n b.txt e.txt
\&    dos2unix -o a.txt -n b.txt e.txt
.Ve
.PP
Convierte c.txt y escribe a e.txt. Convierte y reemplaza a.txt.
Convierte y reemplaza b.txt. Convierte d.txt y escribe a f.txt.
.PP
.Vb 1
\&    dos2unix -n c.txt e.txt -o a.txt b.txt -n d.txt f.txt
.Ve
.SH "RECURSIVE CONVERSION"
.IX Header "RECURSIVE CONVERSION"
Use dos2unix in combination with the \fIfind\fR\|(1) and \fIxargs\fR\|(1) commands to
recursively convert text files in a directory tree structure. For instance to
convert all .txt files in the directory tree under the current directory type:
.PP
.Vb 1
\&    find . -name *.txt |xargs dos2unix
.Ve
.SH "INTERNACIONALIZACIÓN"
.IX Header "INTERNACIONALIZACIÓN"
.IP "\fB\s-1LANG\s0\fR" 4
.IX Item "LANG"
El idioma principal se selecciona con la variable de entorno \s-1LANG\s0. La variable
\&\s-1LANG\s0 consiste de varias partes. La primer parte es el código del idioma en
minúsculas. La segunda es opcional y es el código del país en mayúsculas,
precedido por un guión bajo. Existe también una tercera parte opcional: la
codificación de caracteres, precedida por un punto. Unos cuantos ejemplos para
intérpretes de comandos tipo \s-1POSIX\s0 estándar:
.Sp
.Vb 7
\&    export LANG=nl               Neerlandés
\&    export LANG=nl_NL            Neerlandés, Países Bajos
\&    export LANG=nl_BE            Neerlandés, Bélgica
\&    export LANG=es_ES            Español, España
\&    export LANG=es_MX            Español, México
\&    export LANG=en_US.iso88591   Ingles, EE. UU., codificación Latín-1
\&    export LANG=en_GB.UTF-8      Ingles, Reino Unido, codificación UTF-8
.Ve
.Sp
Para una lista completa de códigos de idioma y país véase el manual de gettext:
<http://www.gnu.org/software/gettext/manual/gettext.html#Language\-Codes>
.Sp
En sistemas Unix puede emplear el comando \fIlocale\fR\|(1) para obtener información
específica del locale.
.IP "\fB\s-1LANGUAGE\s0\fR" 4
.IX Item "LANGUAGE"
Con la variable de entorno \s-1LANGUAGE\s0 puede especificar una lista de prioridad
de los idiomas, separados por dos puntos. Dos2unix da preferencia a \s-1LANGUAGE\s0
por encima de \s-1LANG\s0. Por ejemplo, primero neerlandés y entonces alemán:
\&\f(CW\*(C`LANGUAGE=nl:de\*(C'\fR. Antes de que pueda usar una lista de prioridad de idiomas a
través de la variable \s-1LANGUAGE\s0, primero tiene que habilitar la
internacionalización, mediante asignar un valor distinto de \*(L"C\*(R" a \s-1LANG\s0
(o \s-1LC_ALL\s0). Véase también el manual de gettext:
<http://www.gnu.org/software/gettext/manual/gettext.html#The\-LANGUAGE\-variable>
.Sp
Si selecciona un idioma que no está disponible el programa funcionará en ingles.
.IP "\fB\s-1DOS2UNIX_LOCALEDIR\s0\fR" 4
.IX Item "DOS2UNIX_LOCALEDIR"
Con la variable de entorno \s-1DOS2UNIX_LOCALEDIR\s0 el \s-1LOCALEDIR\s0 asignado durante
la compilación puede ser modificado. \s-1LOCALEDIR\s0 es usado para encontrar los
archivos de idioma. El valor por defecto de \s-1GNU\s0 es \f(CW\*(C`/usr/local/share/locale\*(C'\fR.
El parámetro \fB\-\-version\fR desplegará el \s-1LOCALEDIR\s0 en uso.
.Sp
Ejemplo (intérprete de comandos \s-1POSIX\s0):
.Sp
.Vb 1
\&    export DOS2UNIX_LOCALEDIR=$HOME/share/locale
.Ve
.SH "VALOR DE RETORNO"
.IX Header "VALOR DE RETORNO"
Se regresa cero cuando el programa termina exitosamente. Cuando ocurre un error
del sistema se regresará el último número de error del sistema. Para otros errores se
regresa 1.
.PP
El valor de retorno es siempre cero en modo silencioso, excepto cuando se
emplean parámetros incorrectos.
.SH "ESTÁNDARES"
.IX Header "ESTÁNDARES"
<http://es.wikipedia.org/wiki/Documento_de_texto>
.PP
<http://es.wikipedia.org/wiki/Retorno_de_carro>
.PP
<http://es.wikipedia.org/wiki/Nueva_l%C3%ADnea>
.PP
<http://es.wikipedia.org/wiki/Unicode>
.SH "AUTORES"
.IX Header "AUTORES"
Benjamin Lin \- <blin@socs.uts.edu.au>
Bernd Johannes Wuebben (modo mac2unix) \- <wuebben@kde.org>,
Christian Wurll (añadió el salto de línea extra) \- <wurll@ira.uka.de>,
Erwin Waterlander \- <waterlan@xs4all.nl> (Mantenimiento)
.PP
Página del proyecto: <http://waterlan.home.xs4all.nl/dos2unix.html>
.PP
Página de SourceForge: <http://sourceforge.net/projects/dos2unix/>
.PP
Freshmeat: <http://freshmeat.net/projects/dos2unix>
.SH "VÉASE TAMBIÉN"
.IX Header "VÉASE TAMBIÉN"
\&\fIfile\fR\|(1)
\&\fIfind\fR\|(1)
\&\fIiconv\fR\|(1)
\&\fIlocale\fR\|(1)
\&\fIxargs\fR\|(1)
